{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","motion","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","console","log","map","key","onClick","whileHover","opacity","layout","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc950dda.chunk.js","sourcesContent":["import React from 'react'\n\nconst Title = () => {\n\treturn (\n\t\t<div className='title'>\n\t\t\t<h1>PhotoGram</h1>\n\t\t\t<h2>Photo Gallery</h2>\n\t\t\t<p>Upload your pictures by clicking the button below</p>\n\t\t</div>\n\t)\n}\n\nexport default Title\n","import firebase from 'firebase/app'\nimport 'firebase/storage'\nimport 'firebase/firestore'\n\n// Your web app's Firebase configuration\nlet firebaseConfig = {\n\tapiKey: 'AIzaSyDFVTd7XT74LtXj6H0jIubpuSzQknfDKfg',\n\tauthDomain: 'han-firegram.firebaseapp.com',\n\tprojectId: 'han-firegram',\n\tstorageBucket: 'han-firegram.appspot.com',\n\tmessagingSenderId: '21749139518',\n\tappId: '1:21749139518:web:7d526289a27f19de3d296f',\n}\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig)\n\n// Initialize storage\nconst projectStorage = firebase.storage()\nconst projectFirestore = firebase.firestore()\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp\n\nexport { projectStorage, projectFirestore, timestamp }\n","import { useState, useEffect } from 'react'\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config'\n\nconst useStorage = (file) => {\n\tconst [progress, setProgress] = useState(0)\n\tconst [error, setError] = useState(null)\n\tconst [url, setUrl] = useState(null)\n\n\t// fire everytime file input (dependencies array) changed\n\tuseEffect(() => {\n\t\t// references\n\t\tconst storageRef = projectStorage.ref(file.name)\n\n\t\t// making ref to collection on firebase database\n\t\tconst collectionRef = projectFirestore.collection('images')\n\n\t\tstorageRef.put(file).on(\n\t\t\t'state_changed',\n\t\t\t(snap) => {\n\t\t\t\tlet percentage = (snap.bytesTransferred / snap.totalBytes) * 100\n\t\t\t\tsetProgress(percentage)\n\t\t\t},\n\t\t\t(err) => {\n\t\t\t\tsetError(err)\n\t\t\t},\n\t\t\tasync () => {\n\t\t\t\tconst url = await storageRef.getDownloadURL()\n\t\t\t\t// add new doc to collection\n\t\t\t\tconst createdAt = timestamp()\n\t\t\t\tcollectionRef.add({ url, createdAt })\n\t\t\t\tsetUrl(url)\n\t\t\t}\n\t\t)\n\t}, [file])\n\n\treturn { progress, url, error }\n}\n\nexport default useStorage\n","import React, { useEffect } from 'react'\nimport useStorage from '../hooks/useStorage'\nimport { motion } from 'framer-motion'\n\nconst ProgressBar = ({ file, setFile }) => {\n\t// fire the useStorage hook => create reference, progress % // and url for the uploaded file\n\tconst { url, progress } = useStorage(file)\n\n\tuseEffect(() => {\n\t\t// check valid url so we can hide progress bar\n\t\tif (url) {\n\t\t\t// setFile to null so progress bar won't show\n\t\t\tsetFile(null)\n\t\t}\n\t}, [url, setFile])\n\n\treturn (\n\t\t<motion.div\n\t\t\tclassName='progress-bar'\n\t\t\tinitial={{ width: 0 }}\n\t\t\tanimate={{ width: progress + '%' }}\n\t\t></motion.div>\n\t)\n}\n\nexport default ProgressBar\n","import React from 'react'\nimport { useState } from 'react'\nimport ProgressBar from './ProgressBar'\n\nconst UploadForm = () => {\n\tconst [file, setFile] = useState(null)\n\tconst [error, setError] = useState(null)\n\n\tconst types = ['image/png', 'image/jpeg']\n\n\tconst onChangeHandle = (e) => {\n\t\tlet selected = e.target.files[0]\n\n\t\t// check types of input match with types array\n\t\t// means not allow user to input video or anything else\n\t\tif (selected && types.includes(selected.type)) {\n\t\t\tsetFile(selected)\n\t\t\tsetError(null)\n\t\t} else {\n\t\t\tsetFile(null)\n\t\t\tsetError('Please select an image file (png or jpeg)')\n\t\t}\n\t}\n\n\treturn (\n\t\t<form>\n\t\t\t<label>\n\t\t\t\t<input type='file' onChange={onChangeHandle} />\n\t\t\t\t<span>+</span>\n\t\t\t</label>\n\t\t\t<div className='output'>\n\t\t\t\t{error && <div className='error'>{error}</div>}\n\t\t\t\t{file && <div>{file.name}</div>}\n\t\t\t\t{/* hide progress bar later on based on the below code */}\n\t\t\t\t{file && <ProgressBar file={file} setFile={setFile} />}\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nexport default UploadForm\n","import { useState, useEffect } from 'react'\nimport { projectFirestore } from '../firebase/config'\n\nconst useFirestore = (collection) => {\n\tconst [docs, setDocs] = useState([])\n\n\tuseEffect(() => {\n\t\tconst unsub = projectFirestore\n\t\t\t.collection(collection)\n\t\t\t.orderBy('createdAt', 'desc')\n\t\t\t.onSnapshot((snap) => {\n\t\t\t\tlet documents = []\n\t\t\t\tsnap.forEach((doc) => {\n\t\t\t\t\tdocuments.push({ ...doc.data(), id: doc.id })\n\t\t\t\t})\n\t\t\t\tsetDocs(documents)\n\t\t\t})\n\n\t\treturn () => unsub()\n\t}, [collection])\n\n\treturn { docs }\n}\n\nexport default useFirestore\n","import React from 'react'\nimport useFirestore from '../hooks/useFirestore'\nimport { motion } from 'framer-motion'\n\nconst ImageGrid = ({ setSelectedImg }) => {\n\tconst { docs } = useFirestore('images')\n\tconsole.log(docs)\n\n\treturn (\n\t\t<div className='img-grid'>\n\t\t\t{docs &&\n\t\t\t\tdocs.map((doc) => (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tclassName='img-wrap'\n\t\t\t\t\t\tkey={doc.id}\n\t\t\t\t\t\tonClick={() => setSelectedImg(doc.url)}\n\t\t\t\t\t\t// motion\n\t\t\t\t\t\twhileHover={{ opacity: 1 }}\n\t\t\t\t\t\tlayout\n\t\t\t\t\t>\n\t\t\t\t\t\t<motion.img\n\t\t\t\t\t\t\tsrc={doc.url}\n\t\t\t\t\t\t\talt={doc.key}\n\t\t\t\t\t\t\tinitial={{ opacity: 0 }}\n\t\t\t\t\t\t\tanimate={{ opacity: 1 }}\n\t\t\t\t\t\t\ttransition={{ delay: 1 }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</motion.div>\n\t\t\t\t))}\n\t\t</div>\n\t)\n}\n\nexport default ImageGrid\n","import React from 'react'\nimport { motion } from 'framer-motion'\n\nconst Modal = ({ selectedImg, setSelectedImg }) => {\n\t// click outside img will trigger handleClick\n\t// => set img to null\n\tconst handleClick = (e) => {\n\t\t// make sure modal ONLY disappear when click on the div\n\t\t// not the image itselft\n\t\tif (e.target.classList.contains('backdrop')) {\n\t\t\tsetSelectedImg(null)\n\t\t}\n\t}\n\n\treturn (\n\t\t<motion.div\n\t\t\tclassName='backdrop'\n\t\t\tonClick={handleClick}\n\t\t\tinitial={{ opacity: 0 }}\n\t\t\tanimate={{ opacity: 1 }}\n\t\t>\n\t\t\t<motion.img\n\t\t\t\tsrc={selectedImg}\n\t\t\t\talt='enlarged pic'\n\t\t\t\tinitial={{ y: '-100vh' }}\n\t\t\t\tanimate={{ y: 0 }}\n\t\t\t/>\n\t\t</motion.div>\n\t)\n}\n\nexport default Modal\n","import React, { useState } from 'react'\nimport Title from './comps/Title'\nimport UploadForm from './comps/UploadForm'\nimport ImageGrid from './comps/ImageGrid'\nimport Modal from './comps/Modal'\n\nfunction App() {\n\tconst [selectedImg, setSelectedImg] = useState(null)\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Title />\n\t\t\t<UploadForm />\n\t\t\t<ImageGrid setSelectedImg={setSelectedImg} />\n\t\t\t{selectedImg && (\n\t\t\t\t<Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}